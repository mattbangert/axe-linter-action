name: Run axe Accessibility Linter
description: Lints all changed files using the axe DevTools Linter
branding:
  icon: "check-circle"
  color: "blue"
inputs:
  github_token:
    description: Github Token
    required: true
  api_key:
    description: axe Linter API Key
    required: true
  axe_linter_url:
    description: axe Linter URL
    required: false
    default: https://axe-linter.deque.com
  files_pattern:
    description: "File patterns to check for changes"
    required: false
    default: "**/*.js,**/*.jsx,**/*.tsx,**/*.html,**/*.vue,**/*.md,**/*.markdown" # Default patterns
  files_ignore_pattern:
    description: "File patterns to ignore"
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Validate file patterns
      run: |
        SUPPORTED_EXTENSIONS="js jsx tsx html vue md markdown"
        PATTERN_INPUT="${{ inputs.files_pattern }}"
        # Split multiline input into an array of lines
        IFS=$'\n' read -r -d '' -a PATTERNS <<< "$PATTERN_INPUT"

        for pattern in "${PATTERNS[@]}"; do
          # Check for negated patterns
          if [[ "$pattern" =~ ^! ]]; then
            echo "Skipping negated pattern: $pattern"
            continue
          fi

          # Detect brace expansion and handle it
          if [[ "$pattern" =~ \{.*?\} ]]; then
            # Extract braces content and split by commas
            BRACE_CONTENT="${pattern##*\{}"
            BRACE_CONTENT="${BRACE_CONTENT%%\}*}"
            IFS=',' read -r -a EXTENSIONS <<< "$BRACE_CONTENT"

            for EXTENSION in "${EXTENSIONS[@]}"; do
              # Check if the extension is in the list of supported extensions
              if [[ ! " $SUPPORTED_EXTENSIONS " =~ " $EXTENSION " ]]; then
                echo "::error::Unsupported file extension detected: $EXTENSION in pattern $pattern"
                exit 1
              fi
            done
          else
            # Handle patterns without braces separately, extract extension
            EXTENSION="${pattern##*.}"
            # In case there's no clearer ".ext" part, we should skip it
            if [[ "$EXTENSION" == "$pattern" ]]; then
              echo "Skipping pattern without clear extension: $pattern"
              continue
            fi
            # Check if the extension is in the list of supported extensions
            if [[ ! " $SUPPORTED_EXTENSIONS " =~ " $EXTENSION " ]]; then
              echo "::error::Unsupported file extension detected: $EXTENSION in pattern $pattern"
              exit 1
            fi
          fi
        done
      shell: bash
    - uses: mikefarah/yq@master
    - name: Get changed files
      id: changed_files
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      uses: tj-actions/changed-files@cc733854b1f224978ef800d29e4709d5ee2883e4
      with:
        files: ${{ inputs.files_pattern }}
        files_separator: ","
        files_ignore: ${{ inputs.files_ignore_pattern }}
        files_ignore_separator: ","
    - name: Run axe linter
      if: steps.changed_files.outputs.any_changed == 'true'
      run: ${{ github.action_path }}/axe-linter.sh
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        API_KEY: ${{ inputs.api_key }}
        CHANGED_FILES: ${{ steps.changed_files.outputs.all_changed_files }}
        AXE_LINTER_URL: ${{ inputs.axe_linter_url }}
      shell: bash
