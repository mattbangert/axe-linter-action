name: Run axe Accessibility Linter
description: Lints all changed files using the axe DevTools Linter
branding:
  icon: "check-circle"
  color: "blue"
inputs:
  github_token:
    description: Github Token
    required: true
  api_key:
    description: axe Linter API Key
    required: true
  axe_linter_url:
    description: axe Linter URL
    required: false
    default: https://axe-linter.deque.com
  files_pattern:
    description: "File patterns to check for changes"
    required: false
    default: "**/*.js,**/*.jsx,**/*.tsx,**/*.html,**/*.vue,**/*.md,**/*.markdown" # Default patterns
  files_ignore_pattern:
    description: "File patterns to ignore"
    required: false

runs:
  using: "composite"
  steps:
    # - uses: actions/checkout@v4
    # - name: Validate file patterns
    #   run: |
    #     SUPPORTED_EXTENSIONS="js jsx tsx html vue md markdown"
    #     PATTERN_INPUT="${{ inputs.files_pattern }}"
    #     echo "Checking input: $PATTERN_INPUT"
    #     # Split patterns into an array
    #     IFS=$'\n' read -r -d '' -a PATTERNS <<< "$(echo "$PATTERN_INPUT" | xargs -n1)"
    #     for pattern in "${PATTERNS[@]}"; do
    #           echo "Checking array: $pattern"
    #     done
    #     for pattern in "${PATTERNS[@]}"; do
    #       echo "Checking pattern: $pattern"
    #       # Extract the extension from the pattern
    #       EXTENSION="${pattern##*.}"
    #       echo "Checking extension: $EXTENSION"
    #       NEXT_CHAR="${EXTENSION:0:1}"
    #         echo "Next character in extension: $NEXT_CHAR"
    #         if [[ "$NEXT_CHAR" == "{" ]]; then
    #         NEW_EXTENSION="${pattern#*\{}"
    #         NEW_EXTENSION="${NEW_EXTENSION%\}*}"
    #         echo "Checking extension: $NEW_EXTENSION"
    #           IFS=',' read -r -a PATTERNS1 <<< "$NEW_EXTENSION"
    #           for pattern1 in "${PATTERNS1[@]}"; do
    #             echo "Checking extension: $pattern1"
    #             # Check if the extension is in the list of supported extensions
    #             if [[ ! " $SUPPORTED_EXTENSIONS " =~ " $pattern1 " ]]; then
    #               echo "::error::Unsupported file extension detected: $pattern1"
    #           exit 1
    #           fi
    #           done
    #         fi
    #     done
    #   shell: bash
    - uses: mikefarah/yq@master
    - name: Get changed files
      id: changed_files
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      uses: tj-actions/changed-files@cc733854b1f224978ef800d29e4709d5ee2883e4
      with:
        files: ${{ inputs.files_pattern }}
        files_separator: ","
        files_ignore: ${{ inputs.files_ignore_pattern }}
        files_ignore_separator: ","
    - name: List all changed files
      env:
        ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        for file in ${ALL_CHANGED_FILES}; do
          echo "$file was changed"
        done
    - name: Run axe linter
      if: steps.changed_files.outputs.any_changed == 'true'
      run: ${{ github.action_path }}/axe-linter.sh
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        API_KEY: ${{ inputs.api_key }}
        CHANGED_FILES: ${{ steps.changed_files.outputs.all_changed_files }}
        AXE_LINTER_URL: ${{ inputs.axe_linter_url }}
      shell: bash
